in progress:


Backlog:
    display todo instantly
    Reuse database object
    test database
    Create tests
    Strings being coppied should instead be use as reference( what should be String and what &str)
    





Complete:
Store data differently, instead of having titles and todolist combine them
        Work:
        1: DONE Tab Type will be used to specify which input is being used
        2: DONE Keys will need to access the two input boxes
        3: DONEInput 1 will add a new todo list, input 2 will add a new todo Item to the active list
        4: DONE put curser into correct position
        5: DONERemove titles from state
        6: DONETwo lists will be rendered
            1: loop through todolists.name
            2: loop through todolists[index].item_name
Create instructions page
encapsulation
navigate list up and down arrow keys
delete lists
delete list itmes delete/backspce + using arrow keys
check off itmes enter + arrow keys
encapsulate todolist
Make instructions better(have first time be tutorial)
display cross offed item
database to store data
login
For user authentication    
        1: setup state
            a: set the state objects to be correct
            b: login method
            c: create account method
            d: logout method
            e: allow navigation: index, capture keys
        2: create render
            a: defaut page: Login or create account
            b: create account page
            c: login page
  Display username
  Display mode: navigate, or edit
New way to select a list:
    navigation will select a list
useing optioin
Display messages on authentication and app

COMMENT code 
        todo
        todo_item
        user
        database
        user_authentication
        app_state
        render_authentication
        render
        main
have fewer index items
Warnings




TUtorial:
 let mut controls = TodoList::new(String::from("Controls"), 0);
            controls.add(String::from("Use left and right arrow keys to navigate tabs"), 0);
            controls.add(String::from("Press 1 to add a todo list or todo item."), 1);
            controls.add(String::from("Press esc to return to tab navigate."), 2);
            controls.add(String::from("Press 2 to and use arrow keys navigate list and items"), 3);
            controls.add(String::from("Press backspace to remove a list or time."), 4);
            controls.add(String::from("Press enter to cross off an item"), 5);

            let mut tutorial = TodoList::new(String::from("Tutorial"), 1);
            tutorial.add(String::from("Step 1: press 2"), 0);
            tutorial.add(String::from("Step 2: use arrow kesy to navigate to step 3."), 1);
            tutorial.add(String::from("Step 3: press enter to cross me off!"), 2);
            tutorial.add(String::from("Step 4: use arrow kesy to navigate to step 5."), 3);
            tutorial.add(String::from("Step 5: press backspcae to delete me!"), 4);
            tutorial.add(String::from("Step 6: Press esc, then press 1"), 5);
            tutorial.add(String::from("Step 7: use right arrow key to enter Item Input."), 6);
            tutorial.add(String::from("Step 8: type something and press enter"), 7);
            tutorial.add(String::from("Step 9: press esc, then press 2"), 8);
            tutorial.add(String::from("Step 10: use arrow keys to navigate to Delete Me list"), 9);
            tutorial.add(String::from("Step 11: press space to delete the list"), 10);
            tutorial.add(String::from("Totorial over!"));
            let delete_me = TodoList::new(String::from("Delete Me!"), 2);
